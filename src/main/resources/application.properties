server.port=8284

#BasicDataSource
#spring.datasource.driver-class-name=oracle.jdbc.driver.OracleDriver
#spring.datasource.url=jdbc:oracle:thin:@192.168.123.152:1521/XEPDB1
#spring.datasource.username=study
#spring.datasource.password=study

#h2 DB \uC5F0\uACB0
spring.datasource.driver-class-name=org.h2.Driver
spring.datasource.url=jdbc:h2:tcp://localhost/~/test
spring.datasource.username=sa
spring.datasource.password=

# Mybatis
mybatis.type-aliases-package=com.example.crud_project.dto

# mapper
mybatis.mapper-locations=classpath:mapper/**/*.xml
mybatis.configuration.map-underscore-to-camel-case=true

#thymeleaf
spring.thymeleaf.cache=false
spring.thymeleaf.prefix=file:src/main/resources/templates/
spring.devtools.restart.enabled=true

#\uCF58\uC194\uCC3D \uC5D0\uB7EC \uC0C9\uC0C1 \uC801\uC6A9
spring.output.ansi.enabled=always
#\uB85C\uAE45 \uB808\uBCA8 \uC124\uC815
logging.level.root=error

##\uC2DC\uD050\uB9AC\uD2F0 \uC784\uC2DC ID, PW \uC801\uC6A9
#spring.security.user.name= user
#spring.security.user.password= 1234

#oauth2 \uC124\uC815\uB4F1\uB85D
# GOOGLE
spring.security.oauth2.client.registration.google.client-id= 606466601847-e6t8hqg1ou85i2mf8hh3pf934taruj32.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret= []
spring.security.oauth2.client.registration.google.scope= profile, email

# \uAD6C\uAE00\uC774\uB098 \uD398\uC774\uC2A4\uBD81\uC740 \uC548\uC801\uC5B4\uB3C4 \uB418\uB294\uB370, \uB124\uC774\uBC84\uB098 \uCE74\uCE74\uC624\uB294 \uC801\uC5B4\uC918\uC57C\uD568(\uAE30\uBCF8 \uC81C\uACF5 provider\uAC00 \uC544\uB2C8\uAE30 \uB54C\uBB38\uC5D0)
# Naver
spring.security.oauth2.client.registration.naver.client-id = ujWkSV8NkWg4zK8puJhH
spring.security.oauth2.client.registration.naver.client-secret= []
spring.security.oauth2.client.registration.naver.redirect-uri= http://localhost:8284/login/oauth2/code/naver
spring.security.oauth2.client.registration.naver.authorization-grant-type= authorization_code
spring.security.oauth2.client.registration.naver.client-name= Naver
spring.security.oauth2.client.registration.naver.scope= name, email

# Naver Provider \uB4F1\uB85D!
spring.security.oauth2.client.provider.naver.authorization-uri= https://nid.naver.com/oauth2.0/authorize
spring.security.oauth2.client.provider.naver.token-uri= https://nid.naver.com/oauth2.0/token
spring.security.oauth2.client.provider.naver.user-info-uri= https://openapi.naver.com/v1/nid/me
spring.security.oauth2.client.provider.naver.user-name-attribute= response
## \uD68C\uC6D0\uC815\uBCF4\uB97C json\uC73C\uB85C \uBC1B\uB294\uB370, response\uB77C\uB294 \uD0A4\uAC12\uC73C\uB85C \uB124\uC774\uBC84\uAC00 \uB9AC\uD134\uD574\uC900\uB2E4.

## KAKAO
spring.security.oauth2.client.registration.kakao.client-id = 53d08f69937cdc9bdfdb8a91b82b6e60
spring.security.oauth2.client.registration.kakao.client-secret = []
spring.security.oauth2.client.registration.kakao.redirect-uri= http://localhost:8284/login/oauth2/code/kakao
spring.security.oauth2.client.registration.kakao.authorization-grant-type= authorization_code
spring.security.oauth2.client.registration.kakao.scope= profile_nickname
spring.security.oauth2.client.registration.kakao.client-name= kakao
spring.security.oauth2.client.registration.kakao.client-authentication-method= client_secret_post
#
### kAKAO Provider \uB4F1\uB85D!
spring.security.oauth2.client.provider.kakao.authorization-uri= https://kauth.kakao.com/oauth/authorize
spring.security.oauth2.client.provider.kakao.token-uri= https://kauth.kakao.com/oauth/token
spring.security.oauth2.client.provider.kakao.user-info-uri= https://kapi.kakao.com/v2/user/me
spring.security.oauth2.client.provider.kakao.user-name-attribute= id
# \uCE74\uCE74\uC624\uAC00 \uD68C\uC6D0\uC815\uBCF4\uB97C json\uC73C\uB85C \uB118\uACA8\uC8FC\uB294\uB370, id\uB77C\uB294 \uD0A4\uAC12\uC73C\uB85C \uB9AC\uD134\uD574\uC900\uB2E4.

#jwt.secret= c3ByaW5nLWJvb3Qtc2VjdXJpdHktand0LXR1dG9yaWFsLWppd29vbi1zcHJpbmctYm9vdC1zZWN1cml0eS1qd3QtdHV0b3JpYWwK
